@page "/Account/ConfirmEmail"

@using System.Text
@using GeneratorStores.DataAccess.Entities
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.WebUtilities
@using GeneratorStores.Presentation.UI.Data

@inject UserManager<ApplicationUser> UserManager
@inject IdentityRedirectManager RedirectManager

<PageTitle>Email Confirmation</PageTitle>

<div class="confirm-email-wrapper d-flex justify-content-center align-items-center min-vh-100 bg-gradient">
    <div class="card p-4 shadow-lg text-center" style="max-width: 480px; width: 100%; border-radius: 1rem;">
        <div class="mb-4">
            <i class="bi @(statusMessage?.Contains("Thank you") == true ? "bi-check-circle-fill text-success" : "bi-x-circle-fill text-danger")" style="font-size: 3rem;"></i>
        </div>

        <h2 class="fw-bold mb-3">Email Confirmation</h2>
        <p class="lead">@statusMessage</p>

        <a href="/" class="btn btn-primary mt-4 w-100">Go to Home</a>
    </div>
</div>

@code {
    private string? statusMessage;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromQuery]
    private string? UserId { get; set; }

    [SupplyParameterFromQuery]
    private string? Code { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (UserId is null || Code is null)
        {
            RedirectManager.RedirectTo("");
        }

        var user = await UserManager.FindByIdAsync(UserId);
        if (user is null)
        {
            HttpContext.Response.StatusCode = StatusCodes.Status404NotFound;
            statusMessage = $"Error loading user with ID {UserId}";
        }
        else
        {
            var code = Encoding.UTF8.GetString(WebEncoders.Base64UrlDecode(Code));
            var result = await UserManager.ConfirmEmailAsync(user, code);
            statusMessage = result.Succeeded
                ? "Thank you for confirming your email. You can now log in."
                : "There was an error confirming your email. Please try again.";
        }
    }
}

            
<style>
    .confirm-email-wrapper {
        background: linear-gradient(to right, #e0f7fa, #f3e5f5);
        padding: 2rem;
    }

    .card h2 {
        font-size: 1.6rem;
    }

    .card .lead {
        font-size: 1rem;
    }

    .bi {
        font-size: 3rem;
    }

</style>